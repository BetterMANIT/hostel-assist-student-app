name: Build and Release APK

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo '${{ secrets.FIREBASE_CONFIG }}' > $GITHUB_WORKSPACE/app/google-services.json
          echo "google-services.json content for debug:"
          cat $GITHUB_WORKSPACE/app/google-services.json

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace
        env:
          JAVA_HOME: ${{ runner.tool_cache }}/Java_Zulu_jdk/17.0.13-11/x64

      - name: Check APK file exists
        id: check_apk
        run: |
          if [ -f app/build/outputs/apk/release/app-release.apk ]; then
            echo "APK file found at expected location."
            echo "::set-output name=apk_url::https://github.com/${{ github.repository }}/releases/latest/download/app-release.apk"
          else
            echo "APK file not found. Checking other possible locations..."
            find app/build/outputs -name "*.apk"
            echo "::set-output name=apk_url::APK_NOT_FOUND"
          fi

      - name: Release APK
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest  # Use the same tag as before
          name: Release on Main Branch
          artifacts: app/build/outputs/apk/release/app-release.apk
          makeLatest: true
          updateOnlyUnreleased: true  # Update the existing release if it exists
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Zulu_jdk/17.0.13-11/x64

      - name: Output APK URL
        run: |
          echo "APK URL: ${{ steps.check_apk.outputs.apk_url }}"
